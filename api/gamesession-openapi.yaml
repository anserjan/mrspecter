---
openapi: 3.0.0
info:
  title: MrSpecter User API
  description: Gamesession API
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/cloudy-dev/MrSpecterUsers/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8080
  description: Local Testing Server
paths:
  /gamesession:
  get:
    summary: gets all gamesessions
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: array
      "401":
        description: Unauthorized
  post:
    summary: create a new gamesession
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/gamesession_body'
    responses:
      "201":
        description: created
        content:
          application/json:
            schema:
              $ref: gamesession
      "400":
        description: gamesession couldn't be created
  /gamesession/{gamesessionId}:
    get:
      summary: Get a gamesession by ID, together with position data, also update positiondata
      parameters:
      - name: gamesessionId
        in: path
        description: Numeric ID of the gamesession to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "637620d6af622b1c8dbf7f7e"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gamesession_body'
        "404":
          description: Gamessession doesn't exist
    delete:
      summary: deletes gamesession by id
      parameters
      - name: gamesessionId
        in: path
        description: Numeric ID of the gamesession to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "637620d6af622b1c8dbf7f7e"
      responses:
        "204":
          description: gamesession successfully deleted
        "404":
          description: Gamessession doesn't exist
  /gamesession/gamefinished/{gamesessionId}:
    get:
      summary: ends the gamesession and names reason for game-end
      parameters
      - name: gamesessionId
        in: path
        description: Numeric ID of the gamesession to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "637620d6af622b1c8dbf7f7e"
      - name: gameEndReason
        in: path
        description: string containing reason
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "Mr.X wurde gefangen"
        responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game_ended_response200'
        "404":
          description: Gamessession doesn't exist
    /gamesession/{gamesessionId}/leave/


components:
  schemas:
    gamesession_body:
      type: object
      properties:
        lobbyId:
          type: string
        gamemode:
          type: '#/components/schemas/Gamemode'
      example:
        lobbyId: 637620d6af622b1c8dbf7f7e

    game_ended_response200:
      type: //TODO

    Gamemode:
      type: object
      properties:
        _id:
          type: string
        huntedUser:
          type: string
        updatedAt:
          type: string
        maximumUsers:
          type: integer
        gameBorders:
          type: array
          items:
            type: string
        gametime:
          type: integer
