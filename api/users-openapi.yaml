---
openapi: 3.0.0
info:
  title: MrSpecter User API
  description: User API
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/cloudy-dev/MrSpecterUsers/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8080
  description: Local Testing Server
paths:
  /user:
    post:
      summary: Adds a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: User couldn't be created
  /user/{userId}:
    get:
      summary: Get a user by ID
      parameters:
      - name: userId
        in: path
        description: Numeric ID of the user to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "637620d6af622b1c8dbf7f7e"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_body'
        "400":
          description: User doesn't exist
    put:
      summary: Changes user info (bearerAuth)
      parameters:
      - name: userId
        in: path
        description: Numeric ID of the user to get
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: "637620d6af622b1c8dbf7f7e"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_userId_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: User couldn't be changed
        "403":
          description: Authentication failed
      security:
      - bearerAuth: []
components:
  schemas:
    users_userId_body:
      type: object
      properties:
        name:
          type: string
      example:
        name: Thomas
    users_body:
      type: object
      properties:
        name:
          type: string
      example:
        name: Jessica
    inline_response_200_1:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      example:
        id: "637620d6af622b1c8dbf7f7e"
        name: Thomas
    inline_response_200:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        auth_token:
          type: string
      example:
        id: "637620d6af622b1c8dbf7f7e"
        name: Jessica
        auth_token: vuuunrv82nrvu29rvn238r2vnr23v23v
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
